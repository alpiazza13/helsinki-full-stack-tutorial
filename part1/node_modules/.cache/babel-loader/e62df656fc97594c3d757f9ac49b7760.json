{"ast":null,"code":"var _jsxFileName = \"/Users/alexpiazza/Desktop/full_stack/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Display = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 26\n  }\n}, props.value);\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, props.text);\n\nconst App = props => {\n  const [value, setValue] = useState(10);\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToValue(1000 + value),\n    text: \"thousand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToValue(0),\n    text: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToValue(value + 1),\n    text: \"increment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // // STATES AND EVENT HANDLERS\n// const History = (props) => {\n//     if (props.allClicks.length === 0) {\n//       return (\n//         <div>\n//           the app is used by pressing the buttons\n//         </div>\n//       )\n//     }\n//\n//     return (\n//       <div>\n//         button press history: {props.allClicks.join(' ')}\n//       </div>\n//     )\n//   }\n//\n//   const Button = ({ onClick, text }) => (\n//     <button onClick={onClick}>\n//       {text}\n//     </button>\n//   )\n//\n//   const App = (props) => {\n//     const [left, setLeft] = useState(0)\n//     const [right, setRight] = useState(0)\n//     const [allClicks, setAll] = useState([])\n//\n//     const handleLeftClick = () => {\n//       setAll(allClicks.concat('L'))\n//       setLeft(left + 1)\n//     }\n//\n//     const handleRightClick = () => {\n//       setAll(allClicks.concat('R'))\n//       setRight(right + 1)\n//     }\n//\n//     return (\n//       <div>\n//         <div>\n//           {left}\n//           <Button onClick={handleLeftClick} text='left' />\n//           <Button onClick={handleRightClick} text='right' />\n//           {right}\n//           <History allClicks={allClicks} />\n//         </div>\n//       </div>\n//     )\n//   }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n//ORIGINAL\n// // function with no parameters\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probably born in {bornYear()}</p>\n//     </div>\n//   )\n// }\n// const App = () => {\n//   const name = 'Peter'\n//   const age = 10\n//\n//   return (\n//     <div>\n//       <h1>Greetings</h1>\n//       <Hello name=\"Maya\" age={26 + 10} />\n//       <Hello name={name} age={age} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(<App />, document.getElementById('root'))","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/full_stack/part1/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","App","setValue","setToValue","newValue","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAK,CAACC,KAAZ,CAAzB;;AAEA,MAAMC,MAAM,GAAIF,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,KAAK,CAACI,IADT,CADF;;AAMA,MAAMC,GAAG,GAAGL,KAAK,IAAI;AACnB,QAAM,CAACC,KAAD,EAAQK,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAGC,QAAQ,IAAI;AAC7BF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMM,UAAU,CAAC,OAAON,KAAR,CAArC;AAAqD,IAAA,IAAI,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMM,UAAU,CAAC,CAAD,CAArC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMA,UAAU,CAACN,KAAK,GAAG,CAAT,CAArC;AAAkD,IAAA,IAAI,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAfD;;AAiBAH,QAAQ,CAACW,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Display = props => <div>{props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = props => {\n  const [value, setValue] = useState(10)\n\n  const setToValue = newValue => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      <Display value={value} />\n      <Button handleClick={() => setToValue(1000 + value)} text=\"thousand\" />\n      <Button handleClick={() => setToValue(0)} text=\"reset\" />\n      <Button handleClick={() => setToValue(value + 1)} text=\"increment\" />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n// // STATES AND EVENT HANDLERS\n// const History = (props) => {\n//     if (props.allClicks.length === 0) {\n//       return (\n//         <div>\n//           the app is used by pressing the buttons\n//         </div>\n//       )\n//     }\n//\n//     return (\n//       <div>\n//         button press history: {props.allClicks.join(' ')}\n//       </div>\n//     )\n//   }\n//\n//   const Button = ({ onClick, text }) => (\n//     <button onClick={onClick}>\n//       {text}\n//     </button>\n//   )\n//\n//   const App = (props) => {\n//     const [left, setLeft] = useState(0)\n//     const [right, setRight] = useState(0)\n//     const [allClicks, setAll] = useState([])\n//\n//     const handleLeftClick = () => {\n//       setAll(allClicks.concat('L'))\n//       setLeft(left + 1)\n//     }\n//\n//     const handleRightClick = () => {\n//       setAll(allClicks.concat('R'))\n//       setRight(right + 1)\n//     }\n//\n//     return (\n//       <div>\n//         <div>\n//           {left}\n//           <Button onClick={handleLeftClick} text='left' />\n//           <Button onClick={handleRightClick} text='right' />\n//           {right}\n//           <History allClicks={allClicks} />\n//         </div>\n//       </div>\n//     )\n//   }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n\n//ORIGINAL\n// // function with no parameters\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probably born in {bornYear()}</p>\n//     </div>\n//   )\n// }\n// const App = () => {\n//   const name = 'Peter'\n//   const age = 10\n//\n//   return (\n//     <div>\n//       <h1>Greetings</h1>\n//       <Hello name=\"Maya\" age={26 + 10} />\n//       <Hello name={name} age={age} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}