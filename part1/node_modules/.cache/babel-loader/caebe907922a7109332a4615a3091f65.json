{"ast":null,"code":"var _jsxFileName = \"/Users/alexpiazza/Desktop/full_stack/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = props => {\n  const [value, setValue] = useState(10);\n\n  const setToValue = newValue => () => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, value, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setToValue(1000),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"thousand\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setToValue(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setToValue(value + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"increment\"));\n}; // // STATES AND EVENT HANDLERS\n// const History = (props) => {\n//     if (props.allClicks.length === 0) {\n//       return (\n//         <div>\n//           the app is used by pressing the buttons\n//         </div>\n//       )\n//     }\n//\n//     return (\n//       <div>\n//         button press history: {props.allClicks.join(' ')}\n//       </div>\n//     )\n//   }\n//\n//   const Button = ({ onClick, text }) => (\n//     <button onClick={onClick}>\n//       {text}\n//     </button>\n//   )\n//\n//   const App = (props) => {\n//     const [left, setLeft] = useState(0)\n//     const [right, setRight] = useState(0)\n//     const [allClicks, setAll] = useState([])\n//\n//     const handleLeftClick = () => {\n//       setAll(allClicks.concat('L'))\n//       setLeft(left + 1)\n//     }\n//\n//     const handleRightClick = () => {\n//       setAll(allClicks.concat('R'))\n//       setRight(right + 1)\n//     }\n//\n//     return (\n//       <div>\n//         <div>\n//           {left}\n//           <Button onClick={handleLeftClick} text='left' />\n//           <Button onClick={handleRightClick} text='right' />\n//           {right}\n//           <History allClicks={allClicks} />\n//         </div>\n//       </div>\n//     )\n//   }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n//ORIGINAL\n// // function with no parameters\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probably born in {bornYear()}</p>\n//     </div>\n//   )\n// }\n// const App = () => {\n//   const name = 'Peter'\n//   const age = 10\n//\n//   return (\n//     <div>\n//       <h1>Greetings</h1>\n//       <Hello name=\"Maya\" age={26 + 10} />\n//       <Hello name={name} age={age} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(<App />, document.getElementById('root'))","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/full_stack/part1/src/index.js"],"names":["React","useState","ReactDOM","App","props","value","setValue","setToValue","newValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,UAAU,GAAIC,QAAD,IAAc,MAAM;AACrCF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,eAEE;AAAQ,IAAA,OAAO,EAAEE,UAAU,CAAC,IAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,IAAA,OAAO,EAAEA,UAAU,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAQ,IAAA,OAAO,EAAEA,UAAU,CAACF,KAAK,GAAG,CAAT,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AAQD,CAfD,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst App = (props) => {\n  const [value, setValue] = useState(10)\n\n  const setToValue = (newValue) => () => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      {value}\n      <button onClick={setToValue(1000)}>thousand</button>\n      <button onClick={setToValue(0)}>reset</button>\n      <button onClick={setToValue(value + 1)}>increment</button>\n    </div>\n  )\n}\n\n\n// // STATES AND EVENT HANDLERS\n// const History = (props) => {\n//     if (props.allClicks.length === 0) {\n//       return (\n//         <div>\n//           the app is used by pressing the buttons\n//         </div>\n//       )\n//     }\n//\n//     return (\n//       <div>\n//         button press history: {props.allClicks.join(' ')}\n//       </div>\n//     )\n//   }\n//\n//   const Button = ({ onClick, text }) => (\n//     <button onClick={onClick}>\n//       {text}\n//     </button>\n//   )\n//\n//   const App = (props) => {\n//     const [left, setLeft] = useState(0)\n//     const [right, setRight] = useState(0)\n//     const [allClicks, setAll] = useState([])\n//\n//     const handleLeftClick = () => {\n//       setAll(allClicks.concat('L'))\n//       setLeft(left + 1)\n//     }\n//\n//     const handleRightClick = () => {\n//       setAll(allClicks.concat('R'))\n//       setRight(right + 1)\n//     }\n//\n//     return (\n//       <div>\n//         <div>\n//           {left}\n//           <Button onClick={handleLeftClick} text='left' />\n//           <Button onClick={handleRightClick} text='right' />\n//           {right}\n//           <History allClicks={allClicks} />\n//         </div>\n//       </div>\n//     )\n//   }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n\n//ORIGINAL\n// // function with no parameters\n// const Hello = ({ name, age }) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probably born in {bornYear()}</p>\n//     </div>\n//   )\n// }\n// const App = () => {\n//   const name = 'Peter'\n//   const age = 10\n//\n//   return (\n//     <div>\n//       <h1>Greetings</h1>\n//       <Hello name=\"Maya\" age={26 + 10} />\n//       <Hello name={name} age={age} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}