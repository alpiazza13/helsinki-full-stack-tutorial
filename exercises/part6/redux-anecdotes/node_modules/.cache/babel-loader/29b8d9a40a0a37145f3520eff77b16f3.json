{"ast":null,"code":"import anecdoteService from '../services/anecdotes'; // const getId = () => (100000 * Math.random()).toFixed(0)\n// const generateId = () =>\n//   Number((Math.random() * 1000000).toFixed(0))\n// export const createAnecdote = (content) => ({\n//             type: 'ADD',\n//             data: content\n//         })\n\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch({\n      type: 'ADD',\n      data: newAnecdote\n    });\n  };\n};\nexport const createVote = id => {\n  return async dispatch => {\n    const anecdote = await anecdoteService.addVote(id);\n    dispatch({\n      type: 'VOTE',\n      data: anecdote\n    });\n  };\n};\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    });\n  };\n};\n\nconst anecdoteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'VOTE':\n      const id = action.data.id;\n      const anecdoteToChange = state.find(n => n.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      return state.map(anecdote => anecdote.id !== id ? anecdote : changedAnecdote);\n\n    case 'ADD':\n      const toAdd = action.data;\n      return [...state, toAdd];\n\n    case 'INIT_ANECDOTES':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default anecdoteReducer;","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","createAnecdote","content","dispatch","newAnecdote","createNew","type","data","createVote","id","anecdote","addVote","initializeAnecdotes","anecdotes","getAll","anecdoteReducer","state","action","anecdoteToChange","find","n","changedAnecdote","votes","map","toAdd"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B,C,CACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGC,OAAO,IAAI;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,WAAW,GAAG,MAAMJ,eAAe,CAACK,SAAhB,CAA0BH,OAA1B,CAA1B;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,KADC;AAEPC,MAAAA,IAAI,EAAEH;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMI,UAAU,GAAIC,EAAD,IAAQ;AAC9B,SAAO,MAAMN,QAAN,IAAkB;AACrB,UAAMO,QAAQ,GAAG,MAAMV,eAAe,CAACW,OAAhB,CAAwBF,EAAxB,CAAvB;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,MADD;AAELC,MAAAA,IAAI,EAAEG;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAMT,QAAN,IAAkB;AACvB,UAAMU,SAAS,GAAG,MAAMb,eAAe,CAACc,MAAhB,EAAxB;AACAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,IAAI,EAAEM;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;;AAUP,MAAME,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAE9C,UAAOA,MAAM,CAACX,IAAd;AAEI,SAAK,MAAL;AACI,YAAMG,EAAE,GAAGQ,MAAM,CAACV,IAAP,CAAYE,EAAvB;AACA,YAAMS,gBAAgB,GAAGF,KAAK,CAACG,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASA,EAAzB,CAAzB;AACA,YAAMY,eAAe,GAAG,EACtB,GAAGH,gBADmB;AAEtBI,QAAAA,KAAK,EAAEJ,gBAAgB,CAACI,KAAjB,GAAyB;AAFV,OAAxB;AAIA,aAAON,KAAK,CAACO,GAAN,CAAUb,QAAQ,IACvBA,QAAQ,CAACD,EAAT,KAAgBA,EAAhB,GAAqBC,QAArB,GAAgCW,eAD3B,CAAP;;AAIJ,SAAK,KAAL;AACI,YAAMG,KAAK,GAAGP,MAAM,CAACV,IAArB;AACA,aAAO,CAAC,GAAGS,KAAJ,EAAWQ,KAAX,CAAP;;AAEJ,SAAK,gBAAL;AACE,aAAOP,MAAM,CAACV,IAAd;;AAEF;AACG,aAAOS,KAAP;AArBP;AAwBD,CA1BD;;AA4BA,eAAeD,eAAf","sourcesContent":["import anecdoteService from '../services/anecdotes'\n// const getId = () => (100000 * Math.random()).toFixed(0)\n\n// const generateId = () =>\n//   Number((Math.random() * 1000000).toFixed(0))\n\n// export const createAnecdote = (content) => ({\n//             type: 'ADD',\n//             data: content\n//         })\n\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content)\n    dispatch({\n      type: 'ADD',\n      data: newAnecdote,\n    })\n  }\n}\n\nexport const createVote = (id) => {\n    return async dispatch => {\n        const anecdote = await anecdoteService.addVote(id)\n        dispatch({\n            type: 'VOTE',\n            data: anecdote\n        })\n    }\n}\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes,\n    })\n  }\n}\n\nconst anecdoteReducer = (state = [], action) => {\n\n  switch(action.type) {\n\n      case 'VOTE':\n          const id = action.data.id\n          const anecdoteToChange = state.find(n => n.id === id)\n          const changedAnecdote = {\n            ...anecdoteToChange,\n            votes: anecdoteToChange.votes + 1\n          }\n          return state.map(anecdote =>\n            anecdote.id !== id ? anecdote : changedAnecdote\n          )\n\n      case 'ADD':\n          const toAdd = action.data\n          return [...state, toAdd]\n\n      case 'INIT_ANECDOTES':\n        return action.data\n\n      default:\n         return state\n  }\n\n}\n\nexport default anecdoteReducer\n"]},"metadata":{},"sourceType":"module"}