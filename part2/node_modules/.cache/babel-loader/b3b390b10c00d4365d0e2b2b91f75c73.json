{"ast":null,"code":"var _jsxFileName = \"/Users/alexpiazza/Desktop/full_stack/part2/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\n\nconst App = props => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"show \", showAll ? 'important' : 'all')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/full_stack/part2/src/App.js"],"names":["React","useState","useEffect","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","axios","get","then","response","data","length","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","concat","handleNoteChange","target","value","notesToShow","filter","note","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,KAAK,CACFC,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACD,KALH;AAME,GARO,EAQL,EARK,CAAT;AASAN,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,KAAK,CAACa,MAA5B,EAAoC,OAApC;;AAEF,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEhB,OADQ;AAEjBiB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBC,MAAAA,EAAE,EAAEzB,KAAK,CAACa,MAAN,GAAe;AAJF,KAAnB;AAOAZ,IAAAA,QAAQ,CAACD,KAAK,CAAC0B,MAAN,CAAaT,UAAb,CAAD,CAAR;AACAd,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAaA,QAAMwB,gBAAgB,GAAIZ,KAAD,IAAW;AAClCZ,IAAAA,UAAU,CAACY,KAAK,CAACa,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAKA,QAAMC,WAAW,GAAG1B,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAAC+B,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACV,SAA1B,CAFJ;AAIE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,OAAO,GAAG,WAAH,GAAiB,KADhC,CADA,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG0B,WAAW,CAACG,GAAZ,CAAiBD,IAAD,iBACf,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACP,EAAhB;AAAoB,IAAA,IAAI,EAAEO,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,eAYE;AAAM,IAAA,QAAQ,EAAElB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,KAAK,EAAEZ,OAAd;AACC,IAAA,QAAQ,EAAEyB,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAGG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH,CAZF,CADF;AAoBD,CA1DD;;AA4DA,eAAe7B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n  console.log('effect')\n  axios\n    .get('http://localhost:3001/notes')\n    .then(response => {\n      console.log('promise fulfilled')\n      setNotes(response.data)\n    })\n   }, [])\n  console.log('render', notes.length, 'notes')\n\nconst addNote = (event) => {\n  event.preventDefault()\n  const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() < 0.5,\n    id: notes.length + 1,\n  }\n\n  setNotes(notes.concat(noteObject))\n  setNewNote('')\n}\n\nconst handleNoteChange = (event) => {\n  setNewNote(event.target.value)\n}\n\n\nconst notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all' }\n      </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) =>\n          <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n         <input value={newNote}\n          onChange={handleNoteChange}/>\n         <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}