{"ast":null,"code":"import axios from'axios';var baseUrl='http://localhost:3001/api/notes';var getAll=function getAll(){var request=axios.get(baseUrl);return request.then(function(response){return response.data;});};// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   const nonExisting = {\n//     id: 10000,\n//     content: 'This note is not saved to server',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true,\n//   }\n//   return request.then(response => response.data.concat(nonExisting))\n// }\nvar create=function create(newObject){var request=axios.post(baseUrl,newObject);return request.then(function(response){return response.data;});};var update=function update(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};export default{getAll:getAll,create:create,update:update};","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/helsinki-full-stack-tutorial/part2/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","post","update","id","put"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,iCAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB,CACA,MAAOE,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,SAAS,CAAI,CAC1B,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,CAAoBQ,SAApB,CAAhB,CACA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,EAAD,CAAKH,SAAL,CAAmB,CAChC,GAAMN,CAAAA,OAAO,CAAGH,KAAK,CAACa,GAAN,WAAaZ,OAAb,aAAwBW,EAAxB,EAA8BH,SAA9B,CAAhB,CACA,MAAON,CAAAA,OAAO,CAACE,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,cAAe,CAAEL,MAAM,CAANA,MAAF,CAAUM,MAAM,CAANA,MAAV,CAAkBG,MAAM,CAANA,MAAlB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   const nonExisting = {\n//     id: 10000,\n//     content: 'This note is not saved to server',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true,\n//   }\n//   return request.then(response => response.data.concat(nonExisting))\n// }\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n"]},"metadata":{},"sourceType":"module"}