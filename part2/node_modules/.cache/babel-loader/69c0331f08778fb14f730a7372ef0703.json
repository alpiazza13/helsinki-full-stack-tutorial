{"ast":null,"code":"import _objectSpread from\"/Users/alexpiazza/Desktop/helsinki-full-stack-tutorial/part2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alexpiazza/Desktop/helsinki-full-stack-tutorial/part2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Note from'./components/Note';import axios from'axios';import noteService from'./services/notes';import Notification from'./components/Notification';var Footer=function Footer(){var footerStyle={color:'green',fontStyle:'italic',fontSize:16};return/*#__PURE__*/React.createElement(\"div\",{style:footerStyle},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"em\",null,\"Note app, Department of Computer Science, University of Helsinki 2020\"));};var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newNote=_useState4[0],setNewNote=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),showAll=_useState6[0],setShowAll=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errorMessage=_useState8[0],setErrorMessage=_useState8[1];// useEffect takes two parameters - the handler (a function) and the second one speicifying when it should be rendered - empty array means only the frist time the component is rendered\nuseEffect(function(){noteService.getAll().then(function(initialNotes){setNotes(initialNotes);});},[]);var addNote=function addNote(event){event.preventDefault();var noteObject={content:newNote,date:new Date().toISOString(),important:Math.random()<0.5};noteService.create(noteObject).then(function(returnedNote){setNotes(notes.concat(returnedNote));setNewNote('');});};var handleNoteChange=function handleNoteChange(event){setNewNote(event.target.value);};var toggleImportanceOf=function toggleImportanceOf(id){var note=notes.find(function(n){return n.id===id;});var changedNote=_objectSpread(_objectSpread({},note),{},{important:!note.important});noteService.update(id,changedNote).then(function(returnedNote){setNotes(notes.map(function(note){return note.id!==id?note:returnedNote;}));}).catch(function(error){setErrorMessage(\"Note '\".concat(note.content,\"' was already removed from server\"));setTimeout(function(){setErrorMessage(null);},5000);setNotes(notes.filter(function(n){return n.id!==id;}));});};var notesToShow=showAll?notes:notes.filter(function(note){return note.important;});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Notes\"),/*#__PURE__*/React.createElement(Notification,{message:errorMessage}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setShowAll(!showAll);}},\"show \",showAll?'important':'all')),/*#__PURE__*/React.createElement(\"ul\",null,notesToShow.map(function(note,i){return/*#__PURE__*/React.createElement(Note,{key:i,note:note,toggleImportance:function toggleImportance(){return toggleImportanceOf(note.id);}});})),/*#__PURE__*/React.createElement(\"form\",{onSubmit:addNote},/*#__PURE__*/React.createElement(\"input\",{value:newNote,onChange:handleNoteChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"save\")),/*#__PURE__*/React.createElement(Footer,null));};export default App;","map":{"version":3,"sources":["/Users/alexpiazza/Desktop/helsinki-full-stack-tutorial/part2/src/App.js"],"names":["React","useState","useEffect","Note","axios","noteService","Notification","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","returnedNote","concat","handleNoteChange","target","value","toggleImportanceOf","id","note","find","n","changedNote","update","map","catch","error","setTimeout","filter","notesToShow","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n // useEffect takes two parameters - the handler (a function) and the second one speicifying when it should be rendered - empty array means only the frist time the component is rendered\n useEffect(() => {\n   noteService\n     .getAll()\n     .then(initialNotes => {\n     setNotes(initialNotes)\n     })\n }, [])\n\nconst addNote = (event) => {\n  event.preventDefault()\n  const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() < 0.5\n  }\n  noteService\n    .create(noteObject)\n    .then(returnedNote => {\n    setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n}\n\nconst handleNoteChange = (event) => {\n  setNewNote(event.target.value)\n}\n\nconst toggleImportanceOf = id => {\n  const note = notes.find(n => n.id === id)\n  const changedNote = { ...note, important: !note.important }\n\n  noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n    setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n    setErrorMessage(\n    `Note '${note.content}' was already removed from server`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    setNotes(notes.filter(n => n.id !== id))\n    })\n}\n\nconst notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n       <Notification message={errorMessage} />\n      <div>\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all' }\n      </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n            <Note\n                key={i}\n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n         <input value={newNote}\n          onChange={handleNoteChange}/>\n         <button type=\"submit\">save</button>\n      </form>\n     <Footer />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}